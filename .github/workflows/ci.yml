name: CI

on:
  push:
    branches:
    - main
    tags:
    - '*'
  pull_request:
env:
  LATEST_PY_VERSION: '3.10'

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
        - '3.8'
        - '3.9'
        - '3.10'
        - '3.11.0-rc.2 - 3.11'

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install codecov pre-commit

      - name: Install module
        run: python -m pip install .["test"]

      - name: run pre-commit
        if: ${{ matrix.python-version == env.LATEST_PY_VERSION }}
        run: pre-commit run --all-files

      - name: Run tests
        run: python -m pytest --cov morecantile --cov-report term-missing --cov-report xml

      - name: Upload Results
        if: ${{ matrix.python-version == env.LATEST_PY_VERSION }}
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          flags: unittests
          name: Python${{ matrix.python-version }}
          fail_ci_if_error: false

  publish:
    needs: [tests]
    runs-on: ubuntu-latest
    if: startsWith(github.event.ref, 'refs/tags') || github.event_name == 'release'
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ env.LATEST_PY_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flit
          python -m pip install .

      - name: Set tag version
        id: tag
        # https://stackoverflow.com/questions/58177786/get-the-current-pushed-tag-in-github-actions
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Set module version
        id: module
        run: |
          echo version=$(python -c'import morecantile; print(morecantile.__version__)') >> $GITHUB_OUTPUT

      - name: Build and publish
        if: ${{ steps.tag.outputs.version }} == ${{ steps.module.outputs.version}}
        env:
          FLIT_USERNAME: ${{ secrets.PYPI_USERNAME }}
          FLIT_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: flit publish
